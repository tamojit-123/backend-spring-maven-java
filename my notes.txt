# @RestController
Spring RestController annotation is a convenience annotation that is itself annotated with @Controller and @ResponseBody.
Spring RestController annotation is used to create RESTful web services using Spring MVC. Spring RestController takes care of mapping request data to the defined request handler method. Once response body is generated from the handler method, it converts it to JSON or XML response.

# alternative of @GetMapping ,@PostMapping, @PutMapping, @DeleteMapping, @PatchMapping is
@RequestMapping annotation 
@RequestMapping(value = "/get/{id}", method = RequestMethod.GET)


# @ResponseBody is a Spring annotation which binds a method return value to the web response body. It is not interpreted as a view name. It uses HTTP Message converters to convert the return value to HTTP response body, based on the content-type in the request HTTP header.

# The @PathVariable annotation is used to extract the value from the URI. It is most suitable for the RESTful web service where the URL contains some value. Spring MVC allows us to use multiple @PathVariable annotations in the same method. A path variable is a critical part of creating rest resources.

# A REST API (also known as RESTful API) is an application programming interface (API or web API) that conforms to the constraints of REST architectural style and allows for interaction with RESTful web services. REST stands for representational state transfer and was created by computer scientist Roy Fielding.

# save(), deleteById(), findAll() these methods comes under - Maven: org.springframework.data:spring-data-commons